{"version":3,"sources":["styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Movie/styles.ts","components/TabPanel/index.tsx","components/InfoTabs/index.tsx","components/ButtonBack/styles.ts","components/ButtonBack/index.tsx","pages/Movie/index.tsx","pages/FavoriteMovies/styles.ts","pages/FavoriteMovies/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["mobile","window","matchMedia","matches","createGlobalStyle","css","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","shade","Error","span","Movies","div","MyFavsButton","withStyles","root","float","marginTop","minWidth","justifyContent","Button","Dashboard","useState","newMovie","setNewMovie","inputError","setInputError","movies","setMovies","event","a","preventDefault","length","get","response","data","Search","to","process","color","onSubmit","value","onChange","target","placeholder","type","map","movie","imdbID","key","src","Poster","alt","Year","Container","Header","HeaderMainData","HeaderDescription","p","Genre","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","InfoTabs","actors","directors","ratings","setValue","Grid","item","xs","Paper","square","Tabs","indicatorColor","textColor","newValue","aria-label","Tab","label","List","actor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","director","rating","Source","secondary","Value","ButtonGoBack","marginRight","display","ButtonBack","variant","onClick","history","back","getFavoriteMovies","storagedFavoriteMovies","localStorage","getItem","JSON","parse","Movie","setMovie","favoriteMovie","setFavoriteMovie","setRating","genres","setGenres","params","useRouteMatch","useEffect","then","imdbRating","split","favoriteMovies","includes","Fab","favorite","find","push","setItem","stringify","addFavoriteMovie","favoriteMovieId","findIndex","splice","removeFavoriteMovie","initialRating","emptySymbol","fullSymbol","readonly","Runtime","genre","Plot","Actors","Director","Ratings","FavoriteMovies","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y1BACA,IAAMA,EAASC,OAAOC,WAAW,sBAAsBC,QAExCC,cAAf,IAmBMJ,EACIK,YADE,KAIFA,YAJE,M,gDChBGC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,6B,mjECMJ,IAAMC,EAAQC,IAAOC,GAAV,KAULC,EAAOF,IAAOG,KAAV,KAgBX,SAACC,GAAD,OACAA,EAAMC,UACNX,YADA,OAqBcY,YAAM,GAAK,YAKlBC,EAAQP,IAAOQ,KAAV,KAMLC,EAAST,IAAOU,IAAV,KAsDNC,EAAeC,YAAW,CACrCC,KAAM,CACJC,MAAO,QACPC,UAAW,IACXC,SAAU,IACVC,eAAgB,kBALQL,CAOzBM,KC5BYC,EAhFa,WAAO,IAAD,EACAC,mBAAS,IADT,mBACzBC,EADyB,KACfC,EADe,OAEIF,mBAAS,IAFb,mBAEzBG,EAFyB,KAEbC,EAFa,OAGJJ,mBAAkB,IAHd,mBAGzBK,EAHyB,KAGjBC,EAHiB,iDAKhC,WACEC,GADF,qBAAAC,EAAA,yDAGED,EAAME,iBAHR,SAKSR,EALT,uBAMMG,EAAc,2BANpB,+BAUQH,EAASS,OAAS,GAV1B,uBAWMN,EAAc,0CAXpB,2CAe2B7B,EAAIoC,IAAJ,6BACCV,EADD,gBAf3B,WAeUW,EAfV,SAkBsCA,EAASC,KAA3BR,EAlBpB,EAkBYS,SAAgB3B,EAlB5B,EAkB4BA,OAlB5B,wBAqBMiB,EAAcjB,GACdmB,EAAU,IAtBhB,2BA0BIA,EAAUD,GAEVD,EAAc,IA5BlB,kDA8BIA,EAAc,sCA9BlB,2DALgC,sBAuChC,OACE,oCACE,kBAACzB,EAAD,iCAEA,kBAAC,IAAD,CAAMoC,GAAE,UAAKC,iBAAL,qBACN,kBAACzB,EAAD,KACE,kBAAC,IAAD,CAAc0B,MAAM,cACpB,yCACA,kBAAC,IAAD,QAIJ,kBAACnC,EAAD,CAAMG,WAAYkB,EAAYe,SAnDF,6CAoD1B,2BACEC,MAAOlB,EACPmB,SAAU,SAACb,GAAD,OAAWL,EAAYK,EAAMc,OAAOF,QAC9CG,YAAY,oCAEd,4BAAQC,KAAK,UAAb,WAGDpB,GAAc,kBAAChB,EAAD,KAAQgB,GAEvB,kBAACd,EAAD,KACGgB,GACCA,EAAOmB,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEV,GAAE,UAAKC,iBAAL,mBAAsCS,EAAMC,QAC9CC,IAAKF,EAAMC,QAEX,yBAAKE,IAAKH,EAAMI,OAAQC,IAAKL,EAAM9C,QACnC,6BACE,0CAAY8C,EAAM9C,MAAlB,aAA4B8C,EAAMM,KAAlC,c,m5CCxFT,IAAMC,EAAYpD,IAAOU,IAAV,KAYT2C,EAASrD,IAAOU,IAAV,KAUN4C,EAAiBtD,IAAOU,IAAV,KAiCd6C,EAAoBvD,IAAOwD,EAAV,KAMjBC,EAAQzD,IAAOQ,KAAV,K,4GCxCHkD,GAhB2B,SAACtD,GAA0B,IAC3DuD,EAAqCvD,EAArCuD,SAAUpB,EAA2BnC,EAA3BmC,MAAOqB,EAAoBxD,EAApBwD,MAAUC,EAD+B,aACrBzD,EADqB,8BAGlE,OACE,uCACE0D,KAAK,WACLC,OAAQxB,IAAUqB,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GAEHtB,IAAUqB,GAAS,kBAACM,GAAA,EAAD,KAAMP,KCqEjBQ,GAlE2B,SAAC/D,GAA0B,IAC3DgE,EAA+BhE,EAA/BgE,OAAQC,EAAuBjE,EAAvBiE,UAAWC,EAAYlE,EAAZkE,QADuC,EAExClD,mBAAS,GAF+B,mBAE3DmB,EAF2D,KAEpDgC,EAFoD,KAQlE,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CAAOC,QAAM,GACX,kBAACC,GAAA,EAAD,CACEtC,MAAOA,EACPuC,eAAe,UACfC,UAAU,UACVvC,SAXa,SAACb,EAA8BqD,GAClDT,EAASS,IAWHC,aAAW,yBAEX,kBAACC,GAAA,EAAD,CAAKC,MAAM,WACX,kBAACD,GAAA,EAAD,CAAKC,MAAM,aACX,kBAACD,GAAA,EAAD,CAAKC,MAAM,cAIf,kBAAC,GAAD,CAAU5C,MAAOA,EAAOqB,MAAO,GAC7B,kBAACwB,GAAA,EAAD,CAAMH,aAAW,UACdb,EAAOxB,KAAI,SAACyC,GAAD,OACV,kBAACC,GAAA,EAAD,CAAUvC,IAAKsC,GACb,kBAACE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,GAAA,EAAD,CAAcC,QAASL,UAK/B,kBAAC,GAAD,CAAU9C,MAAOA,EAAOqB,MAAO,GAC5BS,EAAUzB,KAAI,SAAC+C,GAAD,OACb,kBAACL,GAAA,EAAD,CAAUvC,IAAK4C,GACb,kBAACJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,GAAA,EAAD,CAAcC,QAASC,SAI7B,kBAAC,GAAD,CAAUpD,MAAOA,EAAOqB,MAAO,GAC5BU,EAAQ1B,KAAI,SAACgD,GAAD,OACX,kBAACN,GAAA,EAAD,CAAUvC,IAAK6C,EAAOC,QACpB,kBAACN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,GAAA,EAAD,CAAcC,QAASE,EAAOC,OAAQC,UAAWF,EAAOG,eC9EvDC,GAAepF,YAAW,CACrCC,KAAM,CACJC,MAAO,QACPC,UAAW,QACXkF,YAAa,OACbC,QAAS,UALetF,CAOzBM,KCOYiF,GAbc,WAC3B,OACE,kBAACH,GAAD,CACEI,QAAQ,YACR/D,MAAM,UACNgE,QAAS,kBAAM/G,OAAOgH,QAAQC,SAE9B,kBAAC,IAAD,MALF,YC6IJ,SAASC,KACP,IAAMC,EACJnH,OAAOoH,aAAaC,QAAQ,mCAAqC,GACnE,OAAOF,EAAyBG,KAAKC,MAAMJ,GAA0B,GAkBxDK,OAnIS,WAAO,IAAD,EACF1F,qBADE,mBACrByB,EADqB,KACdkE,EADc,OAEc3F,oBAAS,GAFvB,mBAErB4F,EAFqB,KAENC,EAFM,OAGA7F,mBAAS,GAHT,mBAGrBwE,EAHqB,KAGbsB,EAHa,OAIA9F,mBAAmB,IAJnB,mBAIrB+F,EAJqB,KAIbC,EAJa,KAMpBC,EAAWC,cAAXD,OAkCR,OAhCAE,qBAAU,WACR5H,EAAIoC,IAAJ,6BAAqCsF,EAAOvE,SAAU0E,MAAK,SAACxF,GAC1D,IAAMa,EAAQb,EAASC,KAEvB8E,EAASlE,GAELA,EAAM4E,YACRP,EAA+B,GAAnBrE,EAAM4E,WAAkB,IAGlC5E,EAAMY,OACR2D,EAAUvE,EAAMY,MAAMiE,MAAM,OAG9B,IAAMC,EAAiBnB,KAAoB5D,KACzC,SAACC,GAAD,OAAkBA,EAAMC,UAE1BmE,EAAiBU,EAAeC,SAASP,EAAOvE,cAEjD,CAACuE,EAAOvE,SAcT,oCACGD,GACC,kBAACO,EAAD,KACE,kBAACyE,EAAA,EAAD,CACE5C,aAAW,OACX5C,MAAO2E,EAAgB,YAAc,UACrCX,QAlBV,WACE,IAAMyB,GAAYd,EAClBC,EAAiBa,GAEbA,EA0DR,SAA0Bd,GACxB,IAAKA,EACH,OAGF,IAAMW,EAAiBnB,KAEvB,GAAImB,EAAeI,MAAK,SAAClF,GAAD,OAAWA,EAAMC,SAAWkE,EAAclE,UAChE,OAGF6E,EAAeK,KAAKhB,GAEpB1H,OAAOoH,aAAauB,QAClB,iCACArB,KAAKsB,UAAUP,IAxEbQ,CAAiBtF,GAkFvB,SAA6BuF,GAC3B,IAAMT,EAAiBnB,KAEjB5C,EAAQ+D,EAAeU,WAC3B,SAACxF,GAAD,OAAWA,EAAMC,SAAWsF,KAG9BT,EAAeW,OAAO1E,EAAO,GAE7BtE,OAAOoH,aAAauB,QAClB,iCACArB,KAAKsB,UAAUP,IA3FbY,CAAoBlB,EAAOvE,UAarB,kBAAC,IAAD,OAEF,kBAACO,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKN,IAAKH,EAAMI,OAAQC,IAAKL,EAAM9C,QAEnC,6BACE,sCAAQ8C,EAAM9C,MAAd,aAAwB8C,EAAMM,KAA9B,MAEA,8BACE,kBAAC,IAAD,CACEqF,cAAe5C,EACf6C,YAAa,kBAAC,IAAD,MACbC,WAAY,kBAAC,IAAD,MACZC,UAAQ,IAEV,kBAAC,IAAD,MAPF,IAOe9F,EAAM+F,SAGrB,2BACGzB,EAAOrF,QACNqF,EAAOvE,KAAI,SAACiG,GAAD,OAAW,kBAACpF,EAAD,CAAOV,IAAK8F,GAAQA,SAKlD,kBAACtF,EAAD,KAAoBV,EAAMiG,OAG5B,kBAAC,GAAD,CACE1E,OAAQvB,EAAMkG,OAAOrB,MAAM,MAC3BrD,UAAWxB,EAAMmG,SAAStB,MAAM,MAChCpD,QAASzB,EAAMoG,WAKrB,kBAAC,GAAD,Q,6qCCzHC,IAAMlJ,GAAQC,IAAOC,GAAV,MAWLQ,GAAST,IAAOU,IAAV,MCyCJwI,GAzCkB,WAAO,IAAD,EACT9H,mBAAkB,IADT,mBAC9BK,EAD8B,KACtBC,EADsB,KAQrC,OALA6F,qBAAU,WACR,IAAMI,EAuCV,WACE,IAAMlB,EACJnH,OAAOoH,aAAaC,QAAQ,mCAAqC,GACnE,OAAOF,EAAyBG,KAAKC,MAAMJ,GAA0B,GA1C5CD,GACvB9E,EAAUiG,KACT,IAGD,oCACE,kBAAC,GAAD,4BAEElG,EAAOK,QACP,oCACE,yEACA,6BACA,kBAAC,IAAD,CAAMK,GAAIC,mBAAV,qCAMJ,kBAAC,GAAD,KACGX,GACCA,EAAOmB,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEV,GAAE,UAAKC,iBAAL,mBAAsCS,EAAMC,QAC9CC,IAAKF,EAAMC,QAEX,yBAAKE,IAAKH,EAAMI,OAAQC,IAAKL,EAAM9C,QACnC,6BACE,0CAAY8C,EAAM9C,MAAlB,aAA4B8C,EAAMM,KAAlC,YAKV,kBAAC,GAAD,QC1CN,IAcegG,GAdU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMhH,kBAA8BiH,OAAK,EAACC,UAAWnI,IAC5D,kBAAC,IAAD,CACEiI,KAAMhH,gCACNkH,UAAWxC,KAEb,kBAAC,IAAD,CACEsC,KAAMhH,iCACNkH,UAAWJ,OCDFK,GATO,kBACpB,oCACE,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,EAAD,QCNJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.be200c87.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components';\nconst mobile = window.matchMedia('(max-width: 600px)').matches;\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    ${\n      mobile\n        ? css`\n            max-width: 100%;\n          `\n        : css`\n            max-width: calc(100vw - 300px);\n          `\n    }\n    \n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.omdbapi.com/',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 100%;\n  line-height: 56px;\n  display: inline-block;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 100%;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #ffffff;\n    border-right: 0;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #3f51b5;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #ffffff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#3f51b5')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Movies = styled.div`\n  margin-top: 80px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    max-width: 260px;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    transition: transform 0.2s;\n    margin-bottom: 10px;\n    margin-right: 10px;\n    width: 215px;\n\n    &:hover {\n      transform: translateY(-10px);\n    }\n\n    img {\n      width: auto;\n      height: 200px;\n    }\n\n    div {\n      text-align: center;\n      margin-top: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const MyFavsButton = withStyles({\n  root: {\n    float: 'right',\n    marginTop: 100,\n    minWidth: 150,\n    justifyContent: 'space-between',\n  },\n})(Button);\n","import React, { useState, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ArrowRightAlt from '@material-ui/icons/ArrowRightAlt';\n\nimport { Title, Form, Movies, Error, MyFavsButton } from './styles';\n\ninterface Movie {\n  imdbID: string;\n  Title: string;\n  Year: string;\n  Poster: string;\n}\n\ninterface ResponseDTO {\n  Search: Movie[];\n  Error: string;\n  totalResults: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [newMovie, setNewMovie] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  async function handleSearchMovie(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    try {\n      if (!newMovie) {\n        setInputError('This field is required.');\n        return;\n      }\n\n      if (newMovie.length < 3) {\n        setInputError('A minimum of 3 characters is required.');\n        return;\n      }\n\n      const response = await api.get<ResponseDTO>(\n        `?apikey=524d16a3&s=${newMovie}&type=movie`,\n      );\n      const { Search: movies, Error } = response.data;\n\n      if (!!Error) {\n        setInputError(Error);\n        setMovies([]);\n        return;\n      }\n\n      setMovies(movies);\n\n      setInputError('');\n    } catch (error) {\n      setInputError('Error in searching for this movie.');\n    }\n  }\n\n  return (\n    <>\n      <Title>Find your Favorite Movie</Title>\n\n      <Link to={`${process.env.PUBLIC_URL}/favorite-movies`}>\n        <MyFavsButton>\n          <FavoriteIcon color=\"secondary\" />\n          <span>My Favs</span>\n          <ArrowRightAlt />\n        </MyFavsButton>\n      </Link>\n\n      <Form hasError={!!inputError} onSubmit={handleSearchMovie}>\n        <input\n          value={newMovie}\n          onChange={(event) => setNewMovie(event.target.value)}\n          placeholder=\"Inform your favorite movie name\"\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Movies>\n        {movies &&\n          movies.map((movie) => (\n            <Link\n              to={`${process.env.PUBLIC_URL}/movies/${movie.imdbID}`}\n              key={movie.imdbID}\n            >\n              <img src={movie.Poster} alt={movie.Title} />\n              <div>\n                <strong>{`${movie.Title} (${movie.Year})`}</strong>\n              </div>\n            </Link>\n          ))}\n      </Movies>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nexport const Container = styled.div`\n  background: #fff;\n  border-radius: 5px;\n  padding: 24px;\n  min-height: calc(100vh - 150px);\n  margin-top: 40px;\n\n  button {\n    float: right;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p,\n  span {\n    color: #aeaeae;\n  }\n`;\n\nexport const HeaderMainData = styled.div`\n  display: flex;\n  img {\n    border-radius: 5px;\n    margin-top: -70px;\n    height: 170px;\n    -webkit-box-shadow: 0px 0px 15px 0px rgba(204, 204, 204, 1);\n    -moz-box-shadow: 0px 0px 15px 0px rgba(204, 204, 204, 1);\n    box-shadow: 0px 0px 15px 0px rgba(204, 204, 204, 1);\n  }\n\n  div {\n    margin-left: 10px;\n\n    h1 {\n      font-weight: 400;\n    }\n\n    span {\n      line-height: 2rem;\n    }\n\n    svg:first-child {\n      color: #efbe46;\n    }\n\n    svg:nth-child(2n) {\n      margin-left: 30px;\n      margin-top: 2px;\n    }\n  }\n`;\n\nexport const HeaderDescription = styled.p`\n  font-size: 20px;\n  color: #aeaeae;\n  margin: 50px 0;\n`;\n\nexport const Genre = styled.span`\n  font-weight: 200;\n  font-size: 14px;\n  color: #aeaeae;\n  border: 1.2px solid #aeaeae;\n  border-radius: 3px;\n  padding: 5px;\n  text-transform: uppercase;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import React, { useState } from 'react';\nimport { BsPerson, BsStar } from 'react-icons/bs';\n\nimport { Grid, Tab, Tabs, Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport TabPanel from '../TabPanel';\n\ninterface Rating {\n  Source: string;\n  Value: string;\n}\n\ninterface InfoTabsProps {\n  actors: string[];\n  directors: string[];\n  ratings: Rating[];\n}\n\nconst InfoTabs: React.FC<InfoTabsProps> = (props: InfoTabsProps) => {\n  const { actors, directors, ratings } = props;\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper square>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n        >\n          <Tab label=\"Actors\" />\n          <Tab label=\"Director\" />\n          <Tab label=\"Ratings\" />\n        </Tabs>\n      </Paper>\n\n      <TabPanel value={value} index={0}>\n        <List aria-label=\"actors\">\n          {actors.map((actor) => (\n            <ListItem key={actor}>\n              <ListItemAvatar>\n                <Avatar>\n                  <BsPerson />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={actor} />\n            </ListItem>\n          ))}\n        </List>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {directors.map((director) => (\n          <ListItem key={director}>\n            <ListItemAvatar>\n              <Avatar>\n                <BsPerson />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={director} />\n          </ListItem>\n        ))}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        {ratings.map((rating) => (\n          <ListItem key={rating.Source}>\n            <ListItemAvatar>\n              <Avatar>\n                <BsStar />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={rating.Source} secondary={rating.Value} />\n          </ListItem>\n        ))}\n      </TabPanel>\n    </Grid>\n  );\n};\n\nexport default InfoTabs;\n","import { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nexport const ButtonGoBack = withStyles({\n  root: {\n    float: 'right',\n    marginTop: '-60px',\n    marginRight: '20px',\n    display: 'block'\n  },\n})(Button);\n","import React from 'react';\nimport { BsChevronLeft } from 'react-icons/bs';\nimport { ButtonGoBack } from './styles';\n\nconst ButtonBack: React.FC = () => {\n  return (\n    <ButtonGoBack\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => window.history.back()}\n    >\n      <BsChevronLeft />\n      Go back\n    </ButtonGoBack>\n  );\n};\n\nexport default ButtonBack;\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport Rating from 'react-rating';\nimport { BsStarFill, BsStar, BsClock } from 'react-icons/bs';\nimport Fab from '@material-ui/core/Fab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport api from '../../services/api';\n\nimport {\n  Container,\n  Header,\n  Genre,\n  HeaderMainData,\n  HeaderDescription,\n} from './styles';\nimport InfoTabs from '../../components/InfoTabs';\nimport ButtonBack from '../../components/ButtonBack';\n\ninterface MovieParams {\n  imdbID: string;\n}\n\ninterface Movie {\n  imdbID: string;\n  Title: string;\n  Year: string;\n  Genre: string;\n  Poster: string;\n  Actors: string;\n  Director: string;\n  Plot: string;\n  Runtime: string;\n  Ratings: any[];\n  imdbRating: string;\n}\n\nconst Movie: React.FC = () => {\n  const [movie, setMovie] = useState<Movie>();\n  const [favoriteMovie, setFavoriteMovie] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [genres, setGenres] = useState<string[]>([]);\n\n  const { params } = useRouteMatch<MovieParams>();\n\n  useEffect(() => {\n    api.get<Movie>(`?apikey=524d16a3&i=${params.imdbID}`).then((response) => {\n      const movie = response.data;\n\n      setMovie(movie);\n\n      if (movie.imdbRating) {\n        setRating((+movie.imdbRating * 5) / 10);\n      }\n\n      if (movie.Genre) {\n        setGenres(movie.Genre.split(', '));\n      }\n\n      const favoriteMovies = getFavoriteMovies().map(\n        (movie: Movie) => movie.imdbID,\n      );\n      setFavoriteMovie(favoriteMovies.includes(params.imdbID));\n    });\n  }, [params.imdbID]);\n\n  function handleClickFavorite() {\n    const favorite = !favoriteMovie;\n    setFavoriteMovie(favorite);\n\n    if (favorite) {\n      addFavoriteMovie(movie);\n    } else {\n      removeFavoriteMovie(params.imdbID);\n    }\n  }\n\n  return (\n    <>\n      {movie && (\n        <Container>\n          <Fab\n            aria-label=\"like\"\n            color={favoriteMovie ? 'secondary' : 'default'}\n            onClick={handleClickFavorite}\n          >\n            <FavoriteIcon />\n          </Fab>\n          <Header>\n            <HeaderMainData>\n              <img src={movie.Poster} alt={movie.Title}></img>\n\n              <div>\n                <h1>{`${movie.Title} (${movie.Year})`}</h1>\n\n                <span>\n                  <Rating\n                    initialRating={rating}\n                    emptySymbol={<BsStar />}\n                    fullSymbol={<BsStarFill />}\n                    readonly\n                  />\n                  <BsClock /> {movie.Runtime}\n                </span>\n\n                <p>\n                  {genres.length &&\n                    genres.map((genre) => <Genre key={genre}>{genre}</Genre>)}\n                </p>\n              </div>\n            </HeaderMainData>\n\n            <HeaderDescription>{movie.Plot}</HeaderDescription>\n          </Header>\n\n          <InfoTabs\n            actors={movie.Actors.split(', ')}\n            directors={movie.Director.split(', ')}\n            ratings={movie.Ratings}\n          />\n        </Container>\n      )}\n\n      <ButtonBack />\n    </>\n  );\n};\n\nfunction addFavoriteMovie(favoriteMovie: Movie | undefined) {\n  if (!favoriteMovie) {\n    return;\n  }\n\n  const favoriteMovies = getFavoriteMovies();\n\n  if (favoriteMovies.find((movie) => movie.imdbID === favoriteMovie.imdbID)) {\n    return;\n  }\n\n  favoriteMovies.push(favoriteMovie);\n\n  window.localStorage.setItem(\n    '@omdb-explorer:favorite-movies',\n    JSON.stringify(favoriteMovies),\n  );\n}\n\nfunction getFavoriteMovies(): Movie[] {\n  const storagedFavoriteMovies =\n    window.localStorage.getItem('@omdb-explorer:favorite-movies') || '';\n  return storagedFavoriteMovies ? JSON.parse(storagedFavoriteMovies) : [];\n}\n\nfunction removeFavoriteMovie(favoriteMovieId: string) {\n  const favoriteMovies = getFavoriteMovies();\n\n  const index = favoriteMovies.findIndex(\n    (movie) => movie.imdbID === favoriteMovieId,\n  );\n\n  favoriteMovies.splice(index, 1);\n\n  window.localStorage.setItem(\n    '@omdb-explorer:favorite-movies',\n    JSON.stringify(favoriteMovies),\n  );\n}\n\nexport default Movie;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 100%;\n  line-height: 56px;\n  display: inline-block;\n\n  margin-top: 80px;\n  margin-bottom: 40px;\n`;\n\nexport const Movies = styled.div`\n  margin-top: 80px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-bottom: 150px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    max-width: 260px;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    transition: transform 0.2s;\n    margin-bottom: 10px;\n    margin-right: 10px;\n    width: 215px;\n\n    &:hover {\n      transform: translateY(-10px);\n    }\n\n    img {\n      width: auto;\n      height: 200px;\n    }\n\n    div {\n      text-align: center;\n      margin-top: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Movies, Title } from './styles';\nimport ButtonBack from '../../components/ButtonBack';\n\ninterface Movie {\n  imdbID: string;\n  Title: string;\n  Year: string;\n  Poster: string;\n}\n\nconst FavoriteMovies: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    const favoriteMovies = getFavoriteMovies();\n    setMovies(favoriteMovies);\n  }, []);\n\n  return (\n    <>\n      <Title>My Favorite Movies</Title>\n\n      {!movies.length && (\n        <>\n          <h4>You don't have any favorite movies yet :(</h4>\n          <br />\n          <Link to={process.env.PUBLIC_URL + '/'}>\n            Let's find your favorite movies!\n          </Link>\n        </>\n      )}\n\n      <Movies>\n        {movies &&\n          movies.map((movie) => (\n            <Link\n              to={`${process.env.PUBLIC_URL}/movies/${movie.imdbID}`}\n              key={movie.imdbID}\n            >\n              <img src={movie.Poster} alt={movie.Title} />\n              <div>\n                <strong>{`${movie.Title} (${movie.Year})`}</strong>\n              </div>\n            </Link>\n          ))}\n      </Movies>\n      <ButtonBack />\n    </>\n  );\n};\n\nexport default FavoriteMovies;\n\nfunction getFavoriteMovies(): Movie[] {\n  const storagedFavoriteMovies =\n    window.localStorage.getItem('@omdb-explorer:favorite-movies') || '';\n  return storagedFavoriteMovies ? JSON.parse(storagedFavoriteMovies) : [];\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Movie from '../pages/Movie';\nimport FavoriteMovies from '../pages/FavoriteMovies';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path={process.env.PUBLIC_URL + '/'} exact component={Dashboard} />\n    <Route\n      path={process.env.PUBLIC_URL + '/movies/:imdbID'}\n      component={Movie}\n    />\n    <Route\n      path={process.env.PUBLIC_URL + '/favorite-movies'}\n      component={FavoriteMovies}\n    />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}